#
# eChempad is a suite of web services oriented to manage the entire
# data life-cycle of experiments and assays from Experimental
# Chemistry and related Science disciplines.
#
# Copyright (C) 2021 - present Institut Català d'Investigació Química (ICIQ)
#
# eChempad is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

#####################################
### APPLICATION PROFILE SELECTION ###
#####################################

# Profile that is active.
# ** Maven wrapper reads this following line of configuration. Do not remove or change format. Change only the value **
# The set value can be test, prod, dev and container
spring.profiles.active = dev

# Fallback profile (set if a certain profile is not active)
spring.profiles.default = dev


#########################################
### Setting up connection to psql DB ####
#########################################

# Default policy with database contents when booting: "validate" checks consistency, "create" wipes colliding tables and creates
# them from scratch, "create-drop" creates DB schema and then drops the information. "Update" updates the information.
# "None does nothing"
eChempad.db.policy = create

# Add DB type (psql)
eChempad.db.driver = org.postgresql.Driver

# Set connection to the desired table of DB using URL
eChempad.db.url = jdbc:postgresql://127.0.0.1:5432/eChempad

# Database credentials
eChempad.db.username = aleixmt
eChempad.db.password = chemistry

# Output the SQL queries
eChempad.db.show-sql = true

# Format of the SQL queries written in the output
eChempad.db.format_sql = yes

# Naming schema used when naming tables and properties, it can be SpringImplicitNamingStrategy or SpringPhysicalNamingStrategy
eChempad.db.naming_strategy = SpringPhysicalNamingStrategy

# https://stackoverflow.com/questions/31469136/spring-data-jpa-storing-blob
# This property configures the current session context, which is needed if you want to use the LobCreator, which is
# invoked as  this.sessionFactory.getCurrentSession().getLobHelper()
# Valid options:
# - jta
# - thread
# - managed
# - thread_static
# current_session_context_class=thread
eChempad.db.sessionContext = thread

# To remove a warning about open session in view, which is considered an anti-pattern. It can cause performance problems
# when active in some projects, but when is inactive we need to handle the LazyInitializationException by ourselves.
# https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot
# This should be false in production due to performance reasons, we keep it in false generally to develop taking into
# account the LazyInitializationException
spring.jpa.open-in-view = false

# To autoconfigure the currentSessionContext
# https://stackoverflow.com/questions/25063995/spring-boot-handle-to-hibernate-sessionfactory
#spring.jpa.properties.hibernate.current_session_context_class = org.springframework.orm.hibernate5.SpringSessionContext
#spring.jpa.hibernate.use-new-id-generator-mappings=true

# https://www.baeldung.com/spring-boot-change-port
server.port=8081


# The initialization using sql files (schema-postgresql.sql and data-postgresql.sql) does not work in certain computers (?)
# Used to have the creation of DB with Hibernate using the JPA entities plus the usage of schema-postgresql.sql file.
# From https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
spring.jpa.defer-datasource-initialization = true
# To not initialize the schema on startup, because that invalidates the usage of the schema file
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
# To be able to actually use the schema file, since the schema file is disabled for not embedded databases.
# The second property is added because when trying the project in another computer, the schema-postgresql.sql is not added
# From https://stackoverflow.com/questions/38040572/spring-boot-loading-initial-data
spring.sql.init.mode=always
spring.sql.init.platform=postgresql
spring.datasource.initialize = true

# Even with the two previous properties, data-postgresql.sql and schema-postgresql.sql are not loaded. We must include these keys
# From https://stackoverflow.com/questions/62611881/data-sql-with-spring-boot-jpa-postresql-is-not-loading
spring.sql.init.schema-locations=classpath:SQL/schema-postgresql.sql
spring.sql.init.data-locations=classpath:SQL/data-postgresql.sql


################
### Security ###
################

# Disable Cross-site request forgery protection
eChempad.security.csrf = true

# Disable Cross-origin resource sharing protection
eChempad.security.cors = true

# This config is very related to CAS since CAS needs and obtains authentication by using HTTPS
server.ssl.enabled=true
server.ssl.certificate=classpath:security/eChempad.crt
server.ssl.protocol=TLS
server.ssl.key-store=classpath:security/keystore
server.ssl.key-store-password=changeit
server.ssl.key-alias=eChempad
server.ssl.key-password=changeit
server.ssl.key-store-type=PKCS12

server.ssl.trust-store=classpath:security/truststore
server.ssl.trust-store-password=changeit


##############################
### File upload / download ###
##############################
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

####################################
### Serialization and Data types ###
####################################
# This property is advice to be set to false if the program has an error when trying to serialize empty beans (?)
# https://stackoverflow.com/questions/15261456/how-do-i-disable-fail-on-empty-beans-in-jackson
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Configure lazy initializations vs eager. In production should be true, but for many reasons it makes no sense to not
# initialize the objects when they are pulled from DB in repository code
# If the following line is present, sql initialization scripts are not called
# spring.mainComposer.lazy-initialization=true
spring.main.lazy-initialization=true


#####################
### Views (ZKoss) ###
#####################
# when set will setup a @GetMapping for "/" to return the configured view-name
zk.homepage=mainComposer
# Activate zul resolver, in order to avoid specifying path and / or extension when referring to a zul file
# enable/disable InternalViewResolver for zul files
zk.zul-view-resolver-enabled=true
# Configure any folder below src/mainComposer/resources/web using the zk.zul-view-resolver-prefix-property
# prefix prepended to a view name (i.e. a folder inside the web resource package on the classpath)
zk.zul-view-resolver-prefix=/zul
# Automatically add this suffix (.zul) when invoking a zul template --> Not always applies! For example, applies to
# zk.homepage, but not to property URI Template from a ZUL file
zk.zul-view-resolver-suffix=.zul


################################################################
### Hikari Pool configuration (related to Hibernate and JPA) ###
################################################################

spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000

hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider


################################
### CAS client configuration ###
################################¡

# For the CAS integration, following baeldung's tutorial
spring.freemarker.suffix=.ftl
#cas.redirect-after-validation=false

# Cas client https://fawnoos.com/2021/02/13/cas63-bootiful-cas-client/
cas.server-url-prefix=https://echempad-cas.iciq.es:8443/cas
cas.server-login-url=https://echempad-cas.iciq.es:8443/cas/login
cas.client-host-url=https://echempad.iciq.es:8081/

