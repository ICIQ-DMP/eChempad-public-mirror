<?xml version="1.0" encoding="UTF-8"?>
<!--

    eChempad is a suite of web services oriented to manage the entire
    data life-cycle of experiments and assays from Experimental
    Chemistry and related Science disciplines.

    Copyright (C) 2021 - present Institut Català d'Investigació Química (ICIQ)

    eChempad is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see <https://www.gnu.org/licenses/>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--Parent configuration -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<packaging>war</packaging>

	<!-- Project metadata -->
	<groupId>org.ICIQ</groupId>
	<artifactId>eChempad</artifactId>
	<version>0.11</version>
	<name>eChempad</name>
	<description>Experimental Chemistry Electronic Pad</description>
	<inceptionYear>2021</inceptionYear>
	<url>https://eChempad.iciq.es</url>
	<organization>
		<name>ICIQ</name>
		<url>https://www.iciq.org/</url>
	</organization>

	<!-- Internal variable definition for compilation -->
	<properties>
		<!-- General compilation of the project -->
		<java.version>17</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<!-- Spring -->
		<spring-framework.version>6.1.3</spring-framework.version>
		<springboot.version>${project.parent.version}</springboot.version>
		<spring-security.version>6.1.2</spring-security.version>
		<spring-context-support.version>6.0.11</spring-context-support.version>
		<zkspringboot-starter.version>1.0.4</zkspringboot-starter.version>
		<spring-security-cas.version>5.8.8</spring-security-cas.version>
		<!-- ZK version: ZK 8.6.0.1 CE (build: 2018112010) -->
		<zk.version>9.6.0.2</zk.version>
		<zkspring.version>4.0.2</zkspring.version>
		<zkmax.version>3.6.3</zkmax.version>
		<hikari.version>5.0.1</hikari.version>
		<hibernate-hikariCP.version>6.2.7.Final</hibernate-hikariCP.version>
		<javax-inject.version>1</javax-inject.version>
		<ehcache.version>3.10.6</ehcache.version>
		<threetenbp.version>1.6.5</threetenbp.version>
		<postgresql.version>42.5.4</postgresql.version>
		<jetbrains-annotations.version>24.0.1</jetbrains-annotations.version>
		<testcontainers.version>1.18.3</testcontainers.version>
		<jacoco.version>0.8.2</jacoco.version>
		<reflections.version>0.10.2</reflections.version>
		<jakarta.persistence-api.version>3.1.0</jakarta.persistence-api.version>
		<license.licenseName>apache_v2</license.licenseName>
		<apache-log4j.version>2.22.1</apache-log4j.version>
		<commons-login.version>1.2</commons-login.version>
		<!--Used by the licenses plugin-->
		<license-maven-plugin.version>2.4.0</license-maven-plugin.version>

		<current.year>2023</current.year>

		<!-- CAS -->
		<org.apereo.cas.client.core.version>4.0.4</org.apereo.cas.client.core.version>
		<org.apereo.cas.client.springboot.version>4.0.4</org.apereo.cas.client.springboot.version>
		<javax-servlet.version>4.0.1</javax-servlet.version>
	</properties>

	<!--Licenses -->
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<!-- This is needed to be able to import directly a github repository, which we need to import the Dataverse Java
	API Wrapper  -->
	<repositories>

		<!-- ZK dependency -->
		<repository>
			<id>ZK CE</id>
			<name>ZK CE Repository</name>
			<url>https://mavensync.zkoss.org/maven2</url>
		</repository>

		<!-- To use the dataverse API client for java -->
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>



	<dependencies>
		<!-- SPRING BOOT STARTERS -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Added with the project initialization, it seems a core part of spring boot to do automatic tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>  <!-- causes conflict with JSONObject, which is also pulled from sword client dependency -->
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Added with the project initialization -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- Added with the project initialization, it is for using web page tools in the project -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Allows the usage of filters that will filter out the requests that our controllers are receiving -->
		<!-- By default, filters everything out, so we need to configure it -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Allows the use of the WebClient class, used to perform REST operations as a client. Used to communicate with Signals API-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<!-- For the NoProviderFoundException, used to provide implementation for the validation API, used by Hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- To use a DataSource annotation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<!-- to add the javax filter when upgrading to java 17-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>

		<!-- Added when upgrading to java 17 to reconfigure the cache managing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>


		<!-- Spring -->

		<!-- Used to control the ACL security infrastructure -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
		</dependency>

		<!-- Used to control the ACL security infrastructure -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<!-- Used to control login / logout with ZK -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>

		<!-- Allows the creation of our own properties in application.properties file -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- To use the MockMultipartFile -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<!-- Used to integrate ZK with Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>

		<!-- Used to integrate ZK with Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<!-- Added to configure load time weaving -->
		<!--<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
		</dependency>-->



		<!-- ZK -->

		<!-- To use zkoss in our application -->
		<dependency>
			<groupId>org.zkoss.zkspringboot</groupId>
			<artifactId>zkspringboot-starter</artifactId>
			<type>pom</type>
			<version>${zkspringboot-starter.version}</version>
		</dependency>

		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkplus</artifactId>
			<version>${zk.version}</version>
			<exclusions>
				<exclusion>  <!-- Exclude log4j to avoid duplicate artifacts in the classpath -->
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jdk14</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkspring-core</artifactId>
			<version>${zkspring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkspring-security</artifactId>
			<version>${zkspring.version}</version>
		</dependency>

		<!-- Extra: Spring-core depends on commons-logging. Integration ZK with spring security -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-login.version}</version>
		</dependency>

		<!-- CAS -->
		<!-- To use (integrate) a CAS service -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-cas</artifactId>
		</dependency>

		<!-- Cas client  -->
		<!--<dependency>
			<groupId>org.apereo.cas.client</groupId>
			<artifactId>cas-client-core</artifactId>
			<version>${org.apereo.cas.client.core.version}</version>
		</dependency>-->

		<!-- CAS client support for spring boot -->
		<!--<dependency>
			<groupId>org.apereo.cas.client</groupId>
			<artifactId>cas-client-support-springboot</artifactId>
			<version>${org.apereo.cas.client.springboot.version}</version>
		</dependency>-->

		<!-- When upgrading to java 17 javax.servlet.Filter was missing, even though from java 17 and on we use jakarta-persistence.*  -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax-servlet.version}</version>
		</dependency>


		<!-- INTEGRATION WITH JAVA 17 -->
		<!-- Spring ACL requires a cache to store Object Identity and ACL entries, so we'll make use of Ehcache here.
And, to support Ehcache in Spring, we also need the spring-context-support dependency -->
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
			<classifier>jakarta</classifier>
		</dependency>

		<!-- To use the reflections' library, which is used in the code of iochem-bd
		https://mvnrepository.com/artifact/org.reflections/reflections -->
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>${reflections.version}</version>
		</dependency>

		<!-- To use the @Inject annotation -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax-inject.version}</version>
		</dependency>

		<!-- To configure the Hikari pool of connections, which is a software that manages connections to the database -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikari.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-hikaricp</artifactId>
			<version>${hibernate-hikariCP.version}</version>
		</dependency>

		<!-- Required when upgrading to java 17 since now classes depend on jakarta API and not javax -->
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>${jakarta.persistence-api.version}</version>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>jdbc</artifactId>
			<version>${testcontainers.version}</version>
		</dependency>

		<!-- The cglib is optional. We add it because we use CGLIB-based class proxy -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.3.0</version>
		</dependency>

		<!-- To use the dataverse client API for Java. Jitpack is also needed -->
		<dependency>
			<groupId>com.github.IQSS</groupId>
			<artifactId>dataverse-client-java</artifactId>
			<version>master-SNAPSHOT</version>
			<!-- This dependency pulls transitively a logging implementation, which is already satisfied using Spring,
			exclude it -->
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- A dependency started appearing with error msg Caused by: java.lang.ClassNotFoundException: org.threeten.bp.LocalDateTime -->
		<dependency>
			<groupId>org.threeten</groupId>
			<artifactId>threetenbp</artifactId>
			<version>${threetenbp.version}</version>
		</dependency>

		<!-- To use postgresql dialect in spring -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>

		<!-- Used by the jetbrains IDE to annotate its own things, so they can be recognized by the IDE -->
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>${jetbrains-annotations.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>license-maven-plugin</artifactId>
			<version>${license-maven-plugin.version}</version>
		</dependency>

		<!-- To provide a valid implementation of Log4j2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${apache-log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${apache-log4j.version}</version>
		</dependency>

		<!-- Needed when upgrade to java 17 -->
		<!--<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring-context-support.version}</version>
		</dependency>-->



		<!-- Load time weaver without explicit java agent -->
		<!--
		<dependency>
			<groupId>de.invesdwin</groupId>
			<artifactId>invesdwin-instrument</artifactId>
			<version>1.0.14</version>
		</dependency>
		-->

	</dependencies>



	<!--Builds and plug ins-->

	<!-- Final name for the WAR artifact, so it is always the same and does not change with change of version -->
	<build>
		<finalName>eChempad</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<argLine>
						-add-opens=java.base/java.lang=ALL-UNNAMED
						-add-opens=java.base/java.util=ALL-UNNAMED
					</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<!--Profiles -->


	<profiles>
		<!--  This profile should ONLY be active when user specifies -Dthird.party.licenses=true on command-line.  -->
		<!--  This profile will build "LICENSE-3RD-PARTY.txt" file, grouping all third party licenses  -->
		<profile>
			<id>third-party-license-file-build</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>third.party.licenses</name>
				</property>
			</activation>
			<build>
				<plugins>

					<!-- Added when migrating java 8 to java 11 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.12.1</version>
						<configuration>
							<source>17</source>
							<target>17</target>
						</configuration>
					</plugin>

					<!-- JaCoCo plugin for code coverage -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<!-- attached to Maven test phase -->
							<execution>
								<id>jacoco-report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<!-- default target/jscoco/site/* -->
								<configuration>
									<outputDirectory>target/jacoco-report</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>2.4.0</version>
						<executions>
							<execution>
								<id>download-third-party-license-text</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>download-licenses</goal>
								</goals>
								<configuration>
									<verbose>true</verbose>
									<errorRemedy>ignore</errorRemedy>
									<cleanLicensesOutputDirectory>true</cleanLicensesOutputDirectory>
									<licensesOutputDirectory>${project.basedir}/license/third-party</licensesOutputDirectory>
								</configuration>
							</execution>

							<execution>
								<id>aggregate-add-third-party-markdown</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>add-third-party</goal>
								</goals>
								<configuration>
									<verbose>true</verbose>
									<inceptionYear>${project.inceptionYear}</inceptionYear>
									<organizationName>${project.organization.name}</organizationName>
									<projectName>${project.name}</projectName>
									<outputDirectory>${project.basedir}/license</outputDirectory>
									<thirdPartyFilename>THIRD-PARTY.md</thirdPartyFilename>
									<fileTemplate>${project.basedir}/license/resources/third-party-file-groupByMultiLicense-markdown.ftl</fileTemplate>
									<useMissingFile>true</useMissingFile>
									<missingFile>${project.basedir}/license/resources/LICENSES_3RD_PARTY.properties</missingFile>
									<licenseMerges>
										<licenseMerge>
											Apache-2.0
											|Apache License 2.0
											|The Apache Software License, Version 2.0
											|The Apache License, Version 2.0
											|Apache License, Version 2.0
											|Apache Public License 2.0
											|Apache 2
											|Apache License
											|ASF 2.0
											|Apache 2.0
											|GWT Terms
											|Apache License, version 2.0
										</licenseMerge>
										<licenseMerge>
											BSD License
											|BSD
										</licenseMerge>
										<licenseMerge>
											BSD 3
											|BSD-3-Clause
											|BSD License 3
											|BSD License 2.0
											|BSD 3-clause
											|BSD 3-clause New License
											|New BSD license
										</licenseMerge>
										<licenseMerge>
											CC0
											|COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0
										</licenseMerge>
										<licenseMerge>
											CDDL-1.1
										</licenseMerge>
										<licenseMerge>
											GPL2 w/ CPE
										</licenseMerge>
										<licenseMerge>
											Eclipse Public License 1.0
											|Eclipse Public License - v 1.0
											|Eclipse Public License, Version 1.0
										</licenseMerge>
										<licenseMerge>
											Eclipse Public License v2.0
											|Eclipse Public License - v 2.0
										</licenseMerge>
										<licenseMerge>
											LGPL-2.1-or-later
											|GNU Lesser General Public License|GNU Lesser Public License
											|LGPL 2.1
											|The GNU Lesser General Public License, Version 2.1
										</licenseMerge>
										<licenseMerge>
											GNU LESSER GENERAL PUBLIC LICENSE, Version 3
											|LGPL 3.0
											|Lesser General Public License (LGPL) v 3.0
											|The GNU Lesser General Public License, Version 3.0
										</licenseMerge>
										<licenseMerge>
											MIT License
											|The MIT License
										</licenseMerge>
										<licenseMerge>
											MPL 1.1
										</licenseMerge>
										<licenseMerge>
											Public Domain
											|WTFPL
										</licenseMerge>
										<licenseMerge>
											ICU License
										</licenseMerge>
									</licenseMerges>
								</configuration>
							</execution>



						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
		<!--  This profile should ONLY be active when user specifies -Dattach.license.header=true on command-line.  -->
		<!--  This profile will add license headers to all source files  -->
		<profile>

			<id>license-header-attach</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>attach.license.header</name>
				</property>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin</artifactId>
						<version>4.3</version>
						<configuration>
							<mapping>
								<zul>XML_STYLE</zul>
							</mapping>
							<header>${project.basedir}/license/resources/header.txt</header>
							<properties>
								<owner>${project.organization.name}</owner>
								<email>dmp@iciq.cat</email>
								<inceptionYear>${project.inceptionYear}</inceptionYear>
								<latestYearOfContribution>${current.year}</latestYearOfContribution>
							</properties>
							<excludes>
								<exclude>**/README</exclude>
								<exclude>src/main/resources/secrets/**</exclude>
								<exclude>**/*.map</exclude>
								<exclude>.spelling_dictionary.dic</exclude>
								<exclude>**/cacerts</exclude>
								<exclude>.mvn/**</exclude>
								<exclude>.run/**</exclude>
								<exclude>.idea/**</exclude>
								<exclude>license/**</exclude>
								<exclude>target/**</exclude>
								<exclude>src/mainComposer/resources/CA_certificates/**</exclude>
								<exclude>src/main/resources/static/css/bootstrap.min.css</exclude>
								<exclude>src/main/resources/static/css/font-awesome.min.css</exclude>
								<exclude>src/main/resources/static/js/bootstrap.min.js</exclude>
								<exclude>src/main/resources/static/js/jquery-3.3.1.min.js</exclude>
								<exclude>src/main/resources/static/js/popper.min.js</exclude>
							</excludes>
							<useDefaultExcludes>true</useDefaultExcludes>
							<keywords>
								<keyword>copyright</keyword>
								<keyword>eChempad</keyword>
							</keywords>
						</configuration>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>format</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>